server:
  port: 8889


spring:
  application:
    name: cloud-zuul

  redis:
    host: 127.0.0.1
    port: 6379
    # 连接超时时间（毫秒）
    timeout: 30000
    jedis:
      pool:
        # 连接池最大连接数（使用负值表示没有限制）
        max-active: 200
        # 连接池中的最大空闲连接
        max-idle: 8
        # 连接池中的最小空闲连接
        min-idle: 0
        # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: -1


eureka:
  instance:
    hostname: cloud-zuul
    prefer-ip-address: true
  client:
    service-url:
      defaultZone: http://localhost:8888/eureka/
      #是否从从注册中心获取服务信息
    fetch-registry: true
    #是否注册到注册中心
    register-with-eureka: true
    #定时从注册中心拉取注册表的间隔，默认30s
    registry-fetch-interval-seconds: 30

#日志级别
#logging:
#  level:
#    com.netflix: debug

#zuul网关配置
zuul:
  #什么都不配，则所有请求头都透传到后面服务；源码默认：Cookie", "Set-Cookie", "Authorization" 三个字段不透传
  sensitive-headers:
  #几种路由配置
  routes:
#    #带"/send-forward/路径的请求，分发到当前项目的myController接口（SendForwardFilter）
#    send-forward-demo:
#      path: /send-forward/**
#      url: forward:/helloZuul/sayHello
#    #带"/verify-code/"路径的请求，分发到指定serviceId的微服务中（RibbonRoutingFilter）
    service-verification-code: /verify-code/**
#    #带"/simple-host/"路径的请求，分发到http://localhost:8080/**，这种方式不会作为HystrixCommand执行，也不能用ribbon负载均衡（SimpleHostRoutingFilter）
#    simple-host-demo:
#      path: /simple-host/**
#      url: http://localhost:8080/

